{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Boilerplate CPP": {
		"prefix": "cpp boilerplate",
		"body": [
			"#include <iostream>",
			"using namespace std;",
			"",
			"int main(){",
			"\t$0",
			"",
			"\treturn 0;",
			"}"
		],
		"description": "Log output to console"
	},
	"Boilerplate CP": {
		"prefix": "cp boilerplate",
		"body": [
			"#include <bits/stdc++.h>",
			"using namespace std;",
			"", 
			"#define ll long long int",
			"#define mod 1000000007",
			"#define nl \"\\n\"",
			"const ll N = 2e5+10;",
			"ll arr[N];",
			"", 
			"void solveIt()",
			"{",
			"\tint n;",
			"\tcin>>n;",
			"\t$0",
			"}",
			"",
			"int main()",
			"{",
			"\tint tc;",
			"\tcin>>tc;",
			"\twhile(tc--)",
			"\t{",
			"\t\tsolveIt();",
			"\t}",
			"\treturn 0;",
			"}"
		],
		"description": "Log output to console"
	},
	"Boilerplate C": {
		"prefix": "c boilerplate",
		"body": [
			"#include <stdio.h>",
			"",
			"int main(){",
			"\t$0",
			"",
			"\treturn 0;",
			"}"
		],
		"description": "Log output to console"
	},
	"Boilerplate SDL2": {
		"prefix": "sdl2 boilerplate",
		"body": [
			"#include <SDL2/SDL.h>",
			"#include <SDL2/SDL_image.h>",
			"#include <SDL2/SDL_ttf.h>",
			"#include <iostream>",
			"using namespace std;",
			"",
			"int main(int argc, char **arg){",
			"\t$0",
			"",
			"\treturn 0;",
			"}"
		],
		"description": "Log output to console"
	}
}
